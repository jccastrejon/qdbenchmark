/*
* generated by Xtext
*/
grammar InternalQdBenchmarkDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.imag.qdbenchmark.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.imag.qdbenchmark.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.imag.qdbenchmark.services.QdBenchmarkDslGrammarAccess;

}

@parser::members {

 	private QdBenchmarkDslGrammarAccess grammarAccess;
 	
    public InternalQdBenchmarkDslParser(TokenStream input, QdBenchmarkDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Schema";	
   	}
   	
   	@Override
   	protected QdBenchmarkDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	 iv_ruleSchema=ruleSchema 
	 { $current=$iv_ruleSchema.current; } 
	 EOF 
;

// Rule Schema
ruleSchema returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSchemaAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaAccess().getAttributesAttributeParserRuleCall_1_1_0()); 
	    }
		lv_attributes_2_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSchemaAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaAccess().getEntitiesEntityParserRuleCall_2_0()); 
	    }
		lv_entities_4_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_4_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleDataModel
entryRuleDataModel returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataModelRule()); } 
	 iv_ruleDataModel=ruleDataModel 
	 { $current=$iv_ruleDataModel.current.getText(); }  
	 EOF 
;

// Rule DataModel
ruleDataModel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='KeyValue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataModelAccess().getKeyValueKeyword_0()); 
    }

    |
	kw='Graph' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataModelAccess().getGraphKeyword_1()); 
    }

    |
	kw='Document' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataModelAccess().getDocumentKeyword_2()); 
    }

    |
	kw='Column-Family' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataModelAccess().getColumnFamilyKeyword_3()); 
    }

    |
	kw='Relational' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataModelAccess().getRelationalKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleQualityCharacteristic
entryRuleQualityCharacteristic returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualityCharacteristicRule()); } 
	 iv_ruleQualityCharacteristic=ruleQualityCharacteristic 
	 { $current=$iv_ruleQualityCharacteristic.current.getText(); }  
	 EOF 
;

// Rule QualityCharacteristic
ruleQualityCharacteristic returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='QualityCharacteristic' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualityCharacteristicAccess().getQualityCharacteristicKeyword_0()); 
    }
(
	kw='Reliability' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualityCharacteristicAccess().getReliabilityKeyword_1_0()); 
    }

    |
	kw='PerformanceEfficiency' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualityCharacteristicAccess().getPerformanceEfficiencyKeyword_1_1()); 
    }
))
    ;





// Entry rule entryRuleQualitySubCharacteristic
entryRuleQualitySubCharacteristic returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualitySubCharacteristicRule()); } 
	 iv_ruleQualitySubCharacteristic=ruleQualitySubCharacteristic 
	 { $current=$iv_ruleQualitySubCharacteristic.current.getText(); }  
	 EOF 
;

// Rule QualitySubCharacteristic
ruleQualitySubCharacteristic returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='QualitySubCharacteristic' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getQualitySubCharacteristicKeyword_0()); 
    }
(
	kw='Maturity' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getMaturityKeyword_1_0()); 
    }

    |
	kw='Availability' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getAvailabilityKeyword_1_1()); 
    }

    |
	kw='FaultTolerance' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getFaultToleranceKeyword_1_2()); 
    }

    |
	kw='Recoverability' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getRecoverabilityKeyword_1_3()); 
    }

    |
	kw='TimeBehaviour' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getTimeBehaviourKeyword_1_4()); 
    }

    |
	kw='ResourceUtilisation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualitySubCharacteristicAccess().getResourceUtilisationKeyword_1_5()); 
    }
))
    ;





// Entry rule entryRuleQualitySpecification
entryRuleQualitySpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualitySpecificationRule()); }
	 iv_ruleQualitySpecification=ruleQualitySpecification 
	 { $current=$iv_ruleQualitySpecification.current; } 
	 EOF 
;

// Rule QualitySpecification
ruleQualitySpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQualitySpecificationAccess().getCharacteristicQualityCharacteristicParserRuleCall_0_0()); 
	    }
		lv_characteristic_0_0=ruleQualityCharacteristic		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualitySpecificationRule());
	        }
       		set(
       			$current, 
       			"characteristic",
        		lv_characteristic_0_0, 
        		"QualityCharacteristic");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualitySpecificationAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualitySpecificationAccess().getSubCharacteristicsQualitySubCharacteristicParserRuleCall_1_1_0()); 
	    }
		lv_subCharacteristics_2_0=ruleQualitySubCharacteristic		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualitySpecificationRule());
	        }
       		add(
       			$current, 
       			"subCharacteristics",
        		lv_subCharacteristics_2_0, 
        		"QualitySubCharacteristic");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualitySpecificationAccess().getRightCurlyBracketKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEntityAccess().getSet_ParserRuleCall_0()); 
    }
    this_Set__0=ruleSet_
    { 
        $current = $this_Set__0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEntityAccess().getStruct_ParserRuleCall_1()); 
    }
    this_Struct__1=ruleStruct_
    { 
        $current = $this_Struct__1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEntityAccess().getRelationship_ParserRuleCall_2()); 
    }
    this_Relationship__2=ruleRelationship_
    { 
        $current = $this_Relationship__2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSet_
entryRuleSet_ returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSet_Rule()); }
	 iv_ruleSet_=ruleSet_ 
	 { $current=$iv_ruleSet_.current; } 
	 EOF 
;

// Rule Set_
ruleSet_ returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSet_Access().getSetKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSet_Access().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSet_Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSet_Access().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSet_Access().getDataModelDataModelParserRuleCall_2_1_0()); 
	    }
		lv_dataModel_3_0=ruleDataModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSet_Rule());
	        }
       		set(
       			$current, 
       			"dataModel",
        		lv_dataModel_3_0, 
        		"DataModel");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSet_Access().getGreaterThanSignKeyword_2_2());
    }
)?(	otherlv_5='#' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSet_Access().getNumberSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSet_Access().getQualitySpecificationsQualitySpecificationParserRuleCall_3_1_0()); 
	    }
		lv_qualitySpecifications_6_0=ruleQualitySpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSet_Rule());
	        }
       		add(
       			$current, 
       			"qualitySpecifications",
        		lv_qualitySpecifications_6_0, 
        		"QualitySpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='#' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSet_Access().getNumberSignKeyword_3_2());
    }
)?(	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSet_Access().getLeftSquareBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSet_Access().getAttributesAttributeParserRuleCall_4_1_0()); 
	    }
		lv_attributes_9_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSet_Rule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSet_Access().getRightSquareBracketKeyword_4_2());
    }
)?(	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSet_Access().getLeftCurlyBracketKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSet_Access().getEntitiesEntityParserRuleCall_5_1_0()); 
	    }
		lv_entities_12_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSet_Rule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_12_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSet_Access().getRightCurlyBracketKeyword_5_2());
    }
)?(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSet_Access().getCommaKeyword_6());
    }
)?)
;





// Entry rule entryRuleStruct_
entryRuleStruct_ returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStruct_Rule()); }
	 iv_ruleStruct_=ruleStruct_ 
	 { $current=$iv_ruleStruct_.current; } 
	 EOF 
;

// Rule Struct_
ruleStruct_ returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStruct_Access().getStructKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStruct_Access().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStruct_Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStruct_Access().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStruct_Access().getAttributesAttributeParserRuleCall_2_1_0()); 
	    }
		lv_attributes_3_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStruct_Rule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStruct_Access().getRightSquareBracketKeyword_2_2());
    }
)?(	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStruct_Access().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStruct_Access().getEntitiesEntityParserRuleCall_3_1_0()); 
	    }
		lv_entities_6_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStruct_Rule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_6_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStruct_Access().getRightCurlyBracketKeyword_3_2());
    }
)?(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStruct_Access().getCommaKeyword_4());
    }
)?)
;





// Entry rule entryRuleRelationship_
entryRuleRelationship_ returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationship_Rule()); }
	 iv_ruleRelationship_=ruleRelationship_ 
	 { $current=$iv_ruleRelationship_.current; } 
	 EOF 
;

// Rule Relationship_
ruleRelationship_ returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Relationship' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationship_Access().getRelationshipKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRelationship_Access().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationship_Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelationship_Access().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationship_Access().getAttributesAttributeParserRuleCall_2_1_0()); 
	    }
		lv_attributes_3_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationship_Rule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRelationship_Access().getRightSquareBracketKeyword_2_2());
    }
)?(	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRelationship_Access().getLeftCurlyBracketKeyword_3_0());
    }
	otherlv_6='start' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRelationship_Access().getStartKeyword_3_1());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRelationship_Access().getEqualsSignKeyword_3_2());
    }
(
(
		lv_start_8_0=RULE_ID
		{
			newLeafNode(lv_start_8_0, grammarAccess.getRelationship_Access().getStartIDTerminalRuleCall_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationship_Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"start",
        		lv_start_8_0, 
        		"ID");
	    }

)
)	otherlv_9='end' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRelationship_Access().getEndKeyword_3_4());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRelationship_Access().getEqualsSignKeyword_3_5());
    }
(
(
		lv_end_11_0=RULE_ID
		{
			newLeafNode(lv_end_11_0, grammarAccess.getRelationship_Access().getEndIDTerminalRuleCall_3_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationship_Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"end",
        		lv_end_11_0, 
        		"ID");
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRelationship_Access().getRightCurlyBracketKeyword_3_7());
    }
)?(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRelationship_Access().getCommaKeyword_4());
    }
)?)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_0());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))?(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getCommaKeyword_2());
    }
)?)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


